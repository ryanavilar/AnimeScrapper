<!DOCTYPE html>
<html>
<head>
    <title>Anime Scrapping</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link href="//vjs.zencdn.net/5.4.6/video-js.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">


<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/css/select2.min.css" rel="stylesheet" />
    <style type="text/css">
        .video-js{
            width: 100% !important;
            height: 80vh;
        }
        .anime-search{
            width: 100% !important;
        }

        .select2{
            margin-bottom: 1em;
        }
    </style>
</head>
<body>
<div class="container">

    <h1 class="text-center"> Anime Scrapper</h1>

        <select class="anime-search">
        </select>

        <div class="hidden loading">
           <h1> Loading...</h1>
        </div>
        </div>

        <script   src="https://code.jquery.com/jquery-2.2.4.min.js"   integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44="   crossorigin="anonymous"></script>
 <script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
 <script src="//vjs.zencdn.net/5.4.6/video.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js"></script>

<script type="text/javascript">
$(".anime-search").select2({
        placeholder: 'Cari Nama Anime',
        ajax: {
            type: 'POST',
            url: "/search",
            dataType: 'json',
            delay: 500,
            data: function (params) {
                console.log(params);
                return {
                    q : params.term
                };
            },
            processResults: function (data, params) {
                // parse the results into the format expected by Select2
                // since we are using custom formatting functions we do not need to
                // alter the remote JSON data, except to indicate that infinite
                // scrolling can be used
                console.log(data);
                var result = data;
                for(i = 0;i< data.length;i++){
                    data[i].text = data[i].name;
                    data[i].id = JSON.stringify(data[i]);
                }            
                return {
                    results: data
                };
            },
            cache: true
        },
          escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
          minimumInputLength: 4,
          templateResult: formatRepo, // omitted for brevity, see the source of this page
          templateSelection: formatRepoSelection // omitted for brevity, see the source of this page
      });

$('.anime-search').change(function(e){

        var anime = JSON.parse($(this).val());
             $('.loading').removeClass('hidden');

        window.location.href = "/anime/"+anime.location;
    });

function formatRepo(item) {
    console.log(item);
    if (item.loading) return item.text;

    var markup = "<div class='select2-result-repository clearfix'>" +
    "<div class='select2-result-repository__meta'>" +
    "<div class='select2-result-repository__title'> <b>" + item.text + "</b></div>";


    markup += "</div></div>";

    return markup;
}

function formatRepoSelection(item) {
    return item.nama || item.text;
}

</script>
</body>